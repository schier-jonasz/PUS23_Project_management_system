version: "3.6"

services:
  mongo:
    image: mongo
    hostname: mongo
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: database_mongo
      MONGO_INITDB_USER: root
      MONGO_INITDB_PWD: example
    networks:
      - my-network
    ports:
      - '28017:27017'

  postgres:
      image: postgres
      restart: always
      ports:
        - 5432:5432
      environment:
        POSTGRES_PASSWORD: postgres
      networks:
        - my-network

  rabbitmq:
    image: rabbitmq:3.10-management
    container_name: rabbitmq
    hostname: pus-broker
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: 'rabbitmq'
      RABBITMQ_DEFAULT_PASS: 'example'
    networks:
      - my-network

  redis:
    image: 'redis:latest'
    ports:
      - '6379:6379'
    environment:
      REDIS_PASSWORD: 'example'
    volumes: 
      - ./src:/usr/src/app/src/data
    networks:
      - my-network

  pus-project:
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run start:dev
    ports:
      - 8000:8000
    environment:
      - MONGODB_URL=mongodb://root:example@mongo:27017/pus-project
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=example
      # MONGO_URL: root:root@localhost
    networks:
      - my-network
    volumes:
      - ./src:/usr/src/app/src
    depends_on:
      - mongo
      - redis

networks:
  my-network:
    driver: bridge
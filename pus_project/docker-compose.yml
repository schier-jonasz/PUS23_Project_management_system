version: "3.6"

services:
  mongo:
    image: mongo:4.2
    container_name: mongo
    hostname: mongo
    networks:
      - my-network
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=database_mongo
      - MONGO_INITDB_USER=user
      - MONGO_INITDB_PWD=example

  postgres:
      container_name: postgres
      image: postgres
      restart: always
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=db1
      ports:
        - '5432:5432'
      # volumes: 
      #   - db:/var/lib/postgresql/data
      networks:
        - my-network

  rabbitmq:
    image: rabbitmq:3.10-management
    container_name: rabbitmq
    hostname: pus-broker
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: 'rabbitmq'
      RABBITMQ_DEFAULT_PASS: 'example'
    networks:
      - my-network

  redis:
    image: 'redis:latest'
    environment:
      REDIS_PASSWORD: 'example'
    networks:
      - my-network

  pus-project:
    build:
      context: .
      dockerfile: Dockerfile
    command: npm run start:dev
    ports:
      - 8000:8000
    environment:
      MONGO_URL: root:root@localhost
      # - NODE_ENV=production
    networks:
      - my-network
    # depends_on:
    #   - mongodb

networks:
  my-network:
    driver: bridge